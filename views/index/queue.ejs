<h3 class="ui header x-title"></h3>
<table class="ui selectable celled table">
  <thead>
    <tr>
      <th>#</th>
      <th>Time</th>
      <th>Hash</th>
      <th>Type</th>
      <th>Address</th>
      <th>Data</th>
      <th>Processed</th>
      <th>Status</th>
    </tr>
  </thead>
</table>
<%_ script.create('JQuery')
  .useDependencies('SemanticUI/Loader')
  .add(`
$.gwqueue = $.loader($('div[data-tab="queue"] table'), {
    url: '/queue/PAGE',
    formatRow: function(item) {
        return $('<tr><td>' + item.nr + '</td>' +
            '<td>' + item.time + '</td>' +
            '<td>' + item.hash.substr(0, 8) + '</td>' +
            '<td>' + this.icon(item.type) + '</td>' +
            '<td>' + (item.address ? item.address : '') +
                (item.origin ? '<div><div class="ui mini grey label"><i class="phone icon"></i>' + item.origin + '</div></div>' : '') + '</td>' +
            '<td>' + (item.data ? item.data : '') + '</td>' +
            '<td><i class="' + (item.processed ? 'green check' : 'clock') + ' icon"></i></td>' +
            '<td>' + this.formatStatus(item.status, item.processed) + '</td>' +
            '</tr>');
    },
    loaded: function() {
        const self = this;
        if (self.loading) {
            self.loading = false;
        }
    }
});
$.gwqueue.formatStatus = function(status, processed) {
    if (processed) {
        switch (status) {
            case 0:
                return '<i class="red times icon"></i>';
            case 1:
                return '<i class="green check icon"></i>';
        }
    }
    return '<i class="question icon"></i>';
}
$.gwqueue.updateStates = function(imsi) {
    const stat = $('div[data-stat="' + imsi + '"]');
    if (stat.length) {
        $.get('/IMSI/stat'.replace(/IMSI/, imsi))
            .done(function(json) {
                const stats = Object.keys(json);
                if (stats.length) {
                    stats.forEach(key => {
                        stat.find('[data-key="' + key + '"] .value').html(json[key].value ? json[key].value : '&ndash;');
                    });
                }
            })
        ;
    }
}
$.gwqueue.reload = function() {
    const self = this;
    if (!self.loading) {
        self.loading = true;
        self.load();
    }
}
`) -%>
